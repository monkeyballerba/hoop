-- ⚠️ Load Rayfield UI Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- 🪟 Create Window
local Window = Rayfield:CreateWindow({
    Name = "🏀 Arcade BB 🏀",
    LoadingTitle = "Loading GUI...",
    LoadingSubtitle = "by Lazy",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ArcadeBB",
        FileName = "ArcadeBB_Config"
    },
    Discord = {
        Enabled = true,
        Invite = "ura",
        RememberJoins = true
    },
    KeySystem = false,
    ToggleUIKeybind = Enum.KeyCode.K
})

-- ⚙️ Variables
local autoGreen = false
local ws = 16
local plr = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- 📁 Main Tab
local MainTab = Window:CreateTab("Main", 1234567890)

-- 🔘 Auto Green Toggle
MainTab:CreateToggle({
    Name = "Auto Green",
    CurrentValue = false,
    Flag = "AutoGreenToggle",
    Callback = function(val)
        autoGreen = val
    end
})

-- 🧍 WalkSpeed Slider
MainTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {5, 100},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = ws,
    Flag = "SpeedSlider",
    Callback = function(val)
        ws = val
        local human = plr.Character and plr.Character:FindFirstChild("Humanoid")
        if human then
            human.WalkSpeed = val
        end
    end
})

-- 🕹️ Glide Button (for mobile)
MainTab:CreateButton({
    Name = "Glide Forward",
    Callback = function()
        local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
        if root then
            local forward = root.CFrame.LookVector * (ws + 50)
            root.Velocity = Vector3.new(forward.X, 30, forward.Z)
        end
    end
})

-- 🟢 Auto Green Hook
local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldNamecall = mt.__namecall

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = { ... }

    if not checkcaller() and method == "FireServer" and tostring(self) == "Shoot" then
        if autoGreen then
            args[2] = -0.98
        end
        return oldNamecall(self, unpack(args))
    end

    return oldNamecall(self, ...)
end)

-- 🚶 Keep WalkSpeed active
RunService.Heartbeat:Connect(function()
    local human = plr.Character and plr.Character:FindFirstChild("Humanoid")
    if human then
        human.WalkSpeed = ws
    end
end)

-- ✅ Load saved values
Rayfield:LoadConfiguration()
